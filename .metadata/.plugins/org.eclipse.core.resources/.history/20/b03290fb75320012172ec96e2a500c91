// Navigation pane project template
import bb.cascades 1.0
import my.systemPrompts 1.0
import my.systemDialogs 1.0
import my.systemToasts 1.0

Page {
    // Add the application menu using a MenuDefinition
    Menu.definition: MenuDefinition {
        // Specify the actions that should be included in the menu
        actions: [
            ActionItem {
                title: "Find Text"
                imageSource: "images/actionOneIcon.png"
                onTriggered: {
                    //open dialog box
                    myQmlToast.show();
                }
            }
        ] // end of actions list
    } // end of MenuDefinition
    Container {
        id: container
        background: Color.LightGray
        layout: DockLayout {
        }
        ScrollView {
            scrollViewProperties {
                scrollMode: ScrollMode.Both
                pinchToZoomEnabled: true
                maxContentScale: 5
                minContentScale: 1
            }
            Container {
                background: Color.create("#fafafa")
                layout: StackLayout {
                    orientation: LayoutOrientation.TopToBottom
                }
                WebView {
                    url: "http://www.google.com"
                    onLoadProgressChanged: {
                        // Update the ProgressBar while loading.
                        progressIndicator.value = loadProgress / 100.0
                    }
                    onLoadingChanged: {
                        if (loadRequest.status == WebLoadStatus.Started) {
                            // Show the ProgressBar when loading started.
                            progressIndicator.opacity = 1.0
                        } else if (loadRequest.status == WebLoadStatus.Succeeded) {
                            // Hide the ProgressBar when loading is complete.
                            progressIndicator.opacity = 0.0
                        } else if (loadRequest.status == WebLoadStatus.Failed) {
                            // If loading failed, fallback to inline HTML, by setting the HTML property directly.
                            progressIndicator.opacity = 0.0
                        }
                    }
                }
            }
        }
        Container {
            // progress of the webview loading and web status
            verticalAlignment: VerticalAlignment.Bottom
            horizontalAlignment: HorizontalAlignment.Fill
            ProgressIndicator {
                id: progressIndicator
                opacity: 0
            }
        }
    }
    attachedObjects: [
        SystemToast {
            id: myQmlToast
            body: "So long! Thanks for coming, see you next time!"
        }
    ]
}
