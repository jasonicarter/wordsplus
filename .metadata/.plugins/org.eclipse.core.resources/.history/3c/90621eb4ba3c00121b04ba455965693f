// Default empty project template
#include "HelloBBM.hpp"

#include <bb/cascades/Application>
#include <bb/cascades/QmlDocument>
#include <bb/cascades/AbstractPane>

using namespace bb::cascades;

#define REGISTERBBM 1
#define PROFILEBOX 2
#define PRESONALMESSAGE 3
#define STATUSMESSAGE 4
#define INVITETODOWNLOAD 5

#define LOG(fmt, args...)   do { fprintf(stdout, "[WorsPlus.cpp ] " fmt "\n", ##args); fflush(stdout); } while (0);

HelloBBM::HelloBBM(bb::cascades::Application *app)
: QObject(app)
{
    // create scene document from main.qml asset
    // set parent to created document to ensure it exists for the whole application lifetime
    QmlDocument *qml = QmlDocument::create("asset:///main.qml").parent(this);
    qml->setContextProperty("helloBBM", this);

    ControlsForBBM(REGISTERBBM);

    // create root object for the UI
    AbstractPane *root = qml->createRootObject<AbstractPane>();
    // set created root object as a scene
    app->setScene(root);
}

void HelloBBM::ControlsForBBM(int state) {

	switch (state) {
		case REGISTERBBM: {
			regBBM = new RegistrationHandler();
			regBBM->appRegister();
			break;
		}
		case PROFILEBOX: {
				QString msg = QString("Using Hello BBM example");
				profileBox = new ProfileBox();
				profileBox->createItem(msg, "none");
			break;
		}
		case PRESONALMESSAGE: {
			updateProfilePage = new UpdateProfilePage(m_userProfile);
			updateProfilePage->savePersonalMessage();
			break;
		}
		case STATUSMESSAGE: {
			updateProfilePage = new UpdateProfilePage(m_userProfile);
			updateProfilePage->saveStatus();
			break;
		}
		case INVITETODOWNLOAD: {
			inviteToDownload = new InviteToDownload();
			inviteToDownload->sendInvite();
			break;
		}
	}

}

